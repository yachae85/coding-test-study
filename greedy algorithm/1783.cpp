#include <cstdio>

int main() {

	int N, M;
	scanf("%d%d", &N, &M);

	int count;


	if (N >= 3) {
		if (M < 5) {
			count = M;
		}
		else if (M - 2 < 5) {
			count = (M - 1);
			if (count > 4)
				count = 4;
		}
		else {
			count = (M - 2);
		}
	}
	else {
		if (N == 1)
			count = 1;
		else {
			count = (M - 1) / 2 + 1;

			if (count > 4)
				count = 4;
		}
	}
	
	printf("%d\n", count);

	return 0;
} /*
  풀이와 비슷하게 생각하고 풀었지만 N이 1일때와 이동 횟수가 4회 이상일 경우 이동 방법을 각각 한 번 이상 이용해야 한다는 조건을 제대로 이해하지 못했다.
  풀이 :



세로가 1이거나 2이거나 아니면 3보다 크거나 같은 경우로 나누어서 생각 하자.



세로가 1칸이라면 어느 방향으로도 이동할 수 없으니 1칸이다.



세로가 2칸이라면 2,3 번을 통하여 (M-1)/2 칸 + 1 (처음위치) 만큼 돌아다닐 수 있지만  이동 횟수가 4번 이상인 경우에는 위의 이동 방법을 



각각 한 번 이상 이용해야 한다. 라는 조건에 의하여 최대 3 + 1칸밖에 될 수 없다.



세로가 3칸이라면 가로가 7칸 이상인 경우는 1,2,3,4를 모두 만족시킬 만한 가로칸이 7칸은 되어야 하므로 (1+2+2+1), 2,3을 한번씩 써주고 나머지는 1과 4로 채우면 최대의 칸을 구할 수 있다.



만약 가로가 7칸 미만이라면 1과 4를 통해 ( M-1 )+ 1만큼 채울 수 있지만 이동 방법 조건에 의하여 역시 최대 3 + 1칸 밖에 될 수 없다.
*/